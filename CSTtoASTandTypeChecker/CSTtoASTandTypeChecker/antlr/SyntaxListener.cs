//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Daniel/IdeaProjects/LanguageSyntax/src/Syntax.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SyntaxParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ISyntaxListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] SyntaxParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] SyntaxParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotLastCommand([NotNull] SyntaxParser.NotLastCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotLastCommand([NotNull] SyntaxParser.NotLastCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastCommand([NotNull] SyntaxParser.LastCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastCommand([NotNull] SyntaxParser.LastCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCommand([NotNull] SyntaxParser.FunctionCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCommand([NotNull] SyntaxParser.FunctionCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>termsCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermsCommand([NotNull] SyntaxParser.TermsCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>termsCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermsCommand([NotNull] SyntaxParser.TermsCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotLastTerm([NotNull] SyntaxParser.NotLastTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotLastTerm([NotNull] SyntaxParser.NotLastTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastTerm([NotNull] SyntaxParser.LastTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastTerm([NotNull] SyntaxParser.LastTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>controlTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControlTerm([NotNull] SyntaxParser.ControlTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>controlTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControlTerm([NotNull] SyntaxParser.ControlTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>statementTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementTerm([NotNull] SyntaxParser.StatementTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>statementTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementTerm([NotNull] SyntaxParser.StatementTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>commentTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommentTerm([NotNull] SyntaxParser.CommentTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>commentTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommentTerm([NotNull] SyntaxParser.CommentTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>useValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseValue([NotNull] SyntaxParser.UseValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>useValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseValue([NotNull] SyntaxParser.UseValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>readValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadValue([NotNull] SyntaxParser.ReadValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>readValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadValue([NotNull] SyntaxParser.ReadValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>flagValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlagValue([NotNull] SyntaxParser.FlagValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>flagValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlagValue([NotNull] SyntaxParser.FlagValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lengthOfValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLengthOfValue([NotNull] SyntaxParser.LengthOfValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lengthOfValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLengthOfValue([NotNull] SyntaxParser.LengthOfValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>listElementValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListElementValue([NotNull] SyntaxParser.ListElementValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>listElementValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListElementValue([NotNull] SyntaxParser.ListElementValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberValue([NotNull] SyntaxParser.NumberValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberValue([NotNull] SyntaxParser.NumberValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>textValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextValue([NotNull] SyntaxParser.TextValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>textValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextValue([NotNull] SyntaxParser.TextValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotValue([NotNull] SyntaxParser.NotValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotValue([NotNull] SyntaxParser.NotValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierValue([NotNull] SyntaxParser.IdentifierValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierValue([NotNull] SyntaxParser.IdentifierValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.lengthOf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLengthOf([NotNull] SyntaxParser.LengthOfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.lengthOf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLengthOf([NotNull] SyntaxParser.LengthOfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberType([NotNull] SyntaxParser.NumberTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberType([NotNull] SyntaxParser.NumberTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>textType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextType([NotNull] SyntaxParser.TextTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>textType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextType([NotNull] SyntaxParser.TextTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>flagType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlagType([NotNull] SyntaxParser.FlagTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>flagType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlagType([NotNull] SyntaxParser.FlagTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListType([NotNull] SyntaxParser.ListTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListType([NotNull] SyntaxParser.ListTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] SyntaxParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] SyntaxParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.listElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListElement([NotNull] SyntaxParser.ListElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.listElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListElement([NotNull] SyntaxParser.ListElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonKeywordName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonKeywordName([NotNull] SyntaxParser.NonKeywordNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonKeywordName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonKeywordName([NotNull] SyntaxParser.NonKeywordNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] SyntaxParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] SyntaxParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonZeroNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonZeroNumber([NotNull] SyntaxParser.NonZeroNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonZeroNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonZeroNumber([NotNull] SyntaxParser.NonZeroNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.digit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDigit([NotNull] SyntaxParser.DigitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.digit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDigit([NotNull] SyntaxParser.DigitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonZeroDigit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonZeroDigit([NotNull] SyntaxParser.NonZeroDigitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonZeroDigit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonZeroDigit([NotNull] SyntaxParser.NonZeroDigitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.flag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlag([NotNull] SyntaxParser.FlagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.flag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlag([NotNull] SyntaxParser.FlagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] SyntaxParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] SyntaxParser.TextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.textWithoutNewlineOrQuotationmarks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextWithoutNewlineOrQuotationmarks([NotNull] SyntaxParser.TextWithoutNewlineOrQuotationmarksContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.textWithoutNewlineOrQuotationmarks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextWithoutNewlineOrQuotationmarks([NotNull] SyntaxParser.TextWithoutNewlineOrQuotationmarksContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>loopStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStructure([NotNull] SyntaxParser.LoopStructureContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStructure([NotNull] SyntaxParser.LoopStructureContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifElseStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseStructure([NotNull] SyntaxParser.IfElseStructureContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifElseStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseStructure([NotNull] SyntaxParser.IfElseStructureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] SyntaxParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] SyntaxParser.LoopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifNoElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfNoElse([NotNull] SyntaxParser.IfNoElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifNoElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfNoElse([NotNull] SyntaxParser.IfNoElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifWithElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfWithElse([NotNull] SyntaxParser.IfWithElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifWithElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfWithElse([NotNull] SyntaxParser.IfWithElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionNoTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionNoTakes([NotNull] SyntaxParser.FunctionNoTakesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionNoTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionNoTakes([NotNull] SyntaxParser.FunctionNoTakesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionWithTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionWithTakes([NotNull] SyntaxParser.FunctionWithTakesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionWithTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionWithTakes([NotNull] SyntaxParser.FunctionWithTakesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.takesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTakesArgument([NotNull] SyntaxParser.TakesArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.takesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTakesArgument([NotNull] SyntaxParser.TakesArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotLastParameter([NotNull] SyntaxParser.NotLastParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotLastParameter([NotNull] SyntaxParser.NotLastParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastParameter([NotNull] SyntaxParser.LastParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastParameter([NotNull] SyntaxParser.LastParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>givesNothing</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGivesNothing([NotNull] SyntaxParser.GivesNothingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>givesNothing</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGivesNothing([NotNull] SyntaxParser.GivesNothingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>givesType</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGivesType([NotNull] SyntaxParser.GivesTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>givesType</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGivesType([NotNull] SyntaxParser.GivesTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nothing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNothing([NotNull] SyntaxParser.NothingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nothing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNothing([NotNull] SyntaxParser.NothingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>createStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateStatement([NotNull] SyntaxParser.CreateStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>createStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateStatement([NotNull] SyntaxParser.CreateStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>giveStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGiveStatement([NotNull] SyntaxParser.GiveStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>giveStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGiveStatement([NotNull] SyntaxParser.GiveStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] SyntaxParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] SyntaxParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>useStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseStatement([NotNull] SyntaxParser.UseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>useStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseStatement([NotNull] SyntaxParser.UseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStatement([NotNull] SyntaxParser.PrintStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStatement([NotNull] SyntaxParser.PrintStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadStatement([NotNull] SyntaxParser.ReadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadStatement([NotNull] SyntaxParser.ReadStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStatement([NotNull] SyntaxParser.AssignStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStatement([NotNull] SyntaxParser.AssignStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] SyntaxParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] SyntaxParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>createNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateNoInput([NotNull] SyntaxParser.CreateNoInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>createNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateNoInput([NotNull] SyntaxParser.CreateNoInputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>createWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateWithInput([NotNull] SyntaxParser.CreateWithInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>createWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateWithInput([NotNull] SyntaxParser.CreateWithInputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>useGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseGive([NotNull] SyntaxParser.UseGiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>useGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseGive([NotNull] SyntaxParser.UseGiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nothingGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNothingGive([NotNull] SyntaxParser.NothingGiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nothingGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNothingGive([NotNull] SyntaxParser.NothingGiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expressionGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionGive([NotNull] SyntaxParser.ExpressionGiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionGive([NotNull] SyntaxParser.ExpressionGiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.break"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak([NotNull] SyntaxParser.BreakContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.break"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak([NotNull] SyntaxParser.BreakContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>useNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseNoInput([NotNull] SyntaxParser.UseNoInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>useNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseNoInput([NotNull] SyntaxParser.UseNoInputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>useWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseWithInput([NotNull] SyntaxParser.UseWithInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>useWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseWithInput([NotNull] SyntaxParser.UseWithInputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotLastInput([NotNull] SyntaxParser.NotLastInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotLastInput([NotNull] SyntaxParser.NotLastInputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastInput([NotNull] SyntaxParser.LastInputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastInput([NotNull] SyntaxParser.LastInputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] SyntaxParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] SyntaxParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRead([NotNull] SyntaxParser.ReadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.read"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRead([NotNull] SyntaxParser.ReadContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueExpression([NotNull] SyntaxParser.ValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueExpression([NotNull] SyntaxParser.ValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixExpression([NotNull] SyntaxParser.InfixExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixExpression([NotNull] SyntaxParser.InfixExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>convertExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConvertExpression([NotNull] SyntaxParser.ConvertExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>convertExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConvertExpression([NotNull] SyntaxParser.ConvertExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParensExpression([NotNull] SyntaxParser.ParensExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParensExpression([NotNull] SyntaxParser.ParensExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] SyntaxParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] SyntaxParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter([NotNull] SyntaxParser.CharacterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter([NotNull] SyntaxParser.CharacterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbol([NotNull] SyntaxParser.SymbolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbol([NotNull] SyntaxParser.SymbolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.symbolWithoutNewline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbolWithoutNewline([NotNull] SyntaxParser.SymbolWithoutNewlineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.symbolWithoutNewline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbolWithoutNewline([NotNull] SyntaxParser.SymbolWithoutNewlineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.wsc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWsc([NotNull] SyntaxParser.WscContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.wsc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWsc([NotNull] SyntaxParser.WscContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment([NotNull] SyntaxParser.CommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment([NotNull] SyntaxParser.CommentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.a"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterA([NotNull] SyntaxParser.AContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.a"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitA([NotNull] SyntaxParser.AContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.b"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterB([NotNull] SyntaxParser.BContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.b"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitB([NotNull] SyntaxParser.BContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.c"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterC([NotNull] SyntaxParser.CContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.c"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitC([NotNull] SyntaxParser.CContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterD([NotNull] SyntaxParser.DContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitD([NotNull] SyntaxParser.DContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterE([NotNull] SyntaxParser.EContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitE([NotNull] SyntaxParser.EContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.f"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterF([NotNull] SyntaxParser.FContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.f"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitF([NotNull] SyntaxParser.FContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.g"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterG([NotNull] SyntaxParser.GContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.g"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitG([NotNull] SyntaxParser.GContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterH([NotNull] SyntaxParser.HContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitH([NotNull] SyntaxParser.HContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.i"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI([NotNull] SyntaxParser.IContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.i"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI([NotNull] SyntaxParser.IContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.j"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJ([NotNull] SyntaxParser.JContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.j"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJ([NotNull] SyntaxParser.JContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.k"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterK([NotNull] SyntaxParser.KContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.k"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitK([NotNull] SyntaxParser.KContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.l"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterL([NotNull] SyntaxParser.LContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.l"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitL([NotNull] SyntaxParser.LContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.m"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterM([NotNull] SyntaxParser.MContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.m"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitM([NotNull] SyntaxParser.MContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.n"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterN([NotNull] SyntaxParser.NContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.n"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitN([NotNull] SyntaxParser.NContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.o"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterO([NotNull] SyntaxParser.OContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.o"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitO([NotNull] SyntaxParser.OContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.p"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterP([NotNull] SyntaxParser.PContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.p"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitP([NotNull] SyntaxParser.PContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.q"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQ([NotNull] SyntaxParser.QContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.q"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQ([NotNull] SyntaxParser.QContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.r"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterR([NotNull] SyntaxParser.RContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.r"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitR([NotNull] SyntaxParser.RContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.s"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterS([NotNull] SyntaxParser.SContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.s"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitS([NotNull] SyntaxParser.SContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterT([NotNull] SyntaxParser.TContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitT([NotNull] SyntaxParser.TContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.u"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterU([NotNull] SyntaxParser.UContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.u"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitU([NotNull] SyntaxParser.UContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterV([NotNull] SyntaxParser.VContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitV([NotNull] SyntaxParser.VContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.w"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterW([NotNull] SyntaxParser.WContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.w"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitW([NotNull] SyntaxParser.WContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterX([NotNull] SyntaxParser.XContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitX([NotNull] SyntaxParser.XContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterY([NotNull] SyntaxParser.YContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitY([NotNull] SyntaxParser.YContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.z"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZ([NotNull] SyntaxParser.ZContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.z"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZ([NotNull] SyntaxParser.ZContext context);
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Daniel/IdeaProjects/LanguageSyntax/src/Syntax.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISyntaxListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SyntaxBaseListener : ISyntaxListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SyntaxParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SyntaxParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotLastCommand([NotNull] SyntaxParser.NotLastCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotLastCommand([NotNull] SyntaxParser.NotLastCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastCommand([NotNull] SyntaxParser.LastCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lastCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastCommand([NotNull] SyntaxParser.LastCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCommand([NotNull] SyntaxParser.FunctionCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCommand([NotNull] SyntaxParser.FunctionCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termsCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermsCommand([NotNull] SyntaxParser.TermsCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termsCommand</c>
	/// labeled alternative in <see cref="SyntaxParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermsCommand([NotNull] SyntaxParser.TermsCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotLastTerm([NotNull] SyntaxParser.NotLastTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotLastTerm([NotNull] SyntaxParser.NotLastTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastTerm([NotNull] SyntaxParser.LastTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lastTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.terms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastTerm([NotNull] SyntaxParser.LastTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>controlTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterControlTerm([NotNull] SyntaxParser.ControlTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>controlTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitControlTerm([NotNull] SyntaxParser.ControlTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>statementTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementTerm([NotNull] SyntaxParser.StatementTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>statementTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementTerm([NotNull] SyntaxParser.StatementTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>commentTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentTerm([NotNull] SyntaxParser.CommentTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>commentTerm</c>
	/// labeled alternative in <see cref="SyntaxParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentTerm([NotNull] SyntaxParser.CommentTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>useValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseValue([NotNull] SyntaxParser.UseValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>useValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseValue([NotNull] SyntaxParser.UseValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>readValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadValue([NotNull] SyntaxParser.ReadValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>readValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadValue([NotNull] SyntaxParser.ReadValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>flagValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlagValue([NotNull] SyntaxParser.FlagValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>flagValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlagValue([NotNull] SyntaxParser.FlagValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lengthOfValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLengthOfValue([NotNull] SyntaxParser.LengthOfValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lengthOfValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLengthOfValue([NotNull] SyntaxParser.LengthOfValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>listElementValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListElementValue([NotNull] SyntaxParser.ListElementValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listElementValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListElementValue([NotNull] SyntaxParser.ListElementValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberValue([NotNull] SyntaxParser.NumberValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberValue([NotNull] SyntaxParser.NumberValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>textValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextValue([NotNull] SyntaxParser.TextValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>textValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextValue([NotNull] SyntaxParser.TextValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotValue([NotNull] SyntaxParser.NotValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotValue([NotNull] SyntaxParser.NotValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierValue([NotNull] SyntaxParser.IdentifierValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierValue</c>
	/// labeled alternative in <see cref="SyntaxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierValue([NotNull] SyntaxParser.IdentifierValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.lengthOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLengthOf([NotNull] SyntaxParser.LengthOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.lengthOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLengthOf([NotNull] SyntaxParser.LengthOfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberType([NotNull] SyntaxParser.NumberTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberType([NotNull] SyntaxParser.NumberTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>textType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextType([NotNull] SyntaxParser.TextTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>textType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextType([NotNull] SyntaxParser.TextTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>flagType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlagType([NotNull] SyntaxParser.FlagTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>flagType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlagType([NotNull] SyntaxParser.FlagTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] SyntaxParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="SyntaxParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] SyntaxParser.ListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] SyntaxParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] SyntaxParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.listElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListElement([NotNull] SyntaxParser.ListElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.listElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListElement([NotNull] SyntaxParser.ListElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addNoIndex</c>
	/// labeled alternative in <see cref="SyntaxParser.addToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddNoIndex([NotNull] SyntaxParser.AddNoIndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addNoIndex</c>
	/// labeled alternative in <see cref="SyntaxParser.addToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddNoIndex([NotNull] SyntaxParser.AddNoIndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addWithIndex</c>
	/// labeled alternative in <see cref="SyntaxParser.addToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddWithIndex([NotNull] SyntaxParser.AddWithIndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addWithIndex</c>
	/// labeled alternative in <see cref="SyntaxParser.addToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddWithIndex([NotNull] SyntaxParser.AddWithIndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonKeywordName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonKeywordName([NotNull] SyntaxParser.NonKeywordNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonKeywordName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonKeywordName([NotNull] SyntaxParser.NonKeywordNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] SyntaxParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] SyntaxParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonZeroNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonZeroNumber([NotNull] SyntaxParser.NonZeroNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonZeroNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonZeroNumber([NotNull] SyntaxParser.NonZeroNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.digit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigit([NotNull] SyntaxParser.DigitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.digit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigit([NotNull] SyntaxParser.DigitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nonZeroDigit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonZeroDigit([NotNull] SyntaxParser.NonZeroDigitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nonZeroDigit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonZeroDigit([NotNull] SyntaxParser.NonZeroDigitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.flag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlag([NotNull] SyntaxParser.FlagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.flag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlag([NotNull] SyntaxParser.FlagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] SyntaxParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] SyntaxParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.textWithoutNewlineOrQuotationmarks"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextWithoutNewlineOrQuotationmarks([NotNull] SyntaxParser.TextWithoutNewlineOrQuotationmarksContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.textWithoutNewlineOrQuotationmarks"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextWithoutNewlineOrQuotationmarks([NotNull] SyntaxParser.TextWithoutNewlineOrQuotationmarksContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>loopStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStructure([NotNull] SyntaxParser.LoopStructureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loopStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStructure([NotNull] SyntaxParser.LoopStructureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifElseStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseStructure([NotNull] SyntaxParser.IfElseStructureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifElseStructure</c>
	/// labeled alternative in <see cref="SyntaxParser.controlStructures"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseStructure([NotNull] SyntaxParser.IfElseStructureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] SyntaxParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] SyntaxParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifNoElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfNoElse([NotNull] SyntaxParser.IfNoElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifNoElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfNoElse([NotNull] SyntaxParser.IfNoElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifWithElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfWithElse([NotNull] SyntaxParser.IfWithElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifWithElse</c>
	/// labeled alternative in <see cref="SyntaxParser.if_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfWithElse([NotNull] SyntaxParser.IfWithElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionNoTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionNoTakes([NotNull] SyntaxParser.FunctionNoTakesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionNoTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionNoTakes([NotNull] SyntaxParser.FunctionNoTakesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionWithTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionWithTakes([NotNull] SyntaxParser.FunctionWithTakesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionWithTakes</c>
	/// labeled alternative in <see cref="SyntaxParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionWithTakes([NotNull] SyntaxParser.FunctionWithTakesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.takesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTakesArgument([NotNull] SyntaxParser.TakesArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.takesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTakesArgument([NotNull] SyntaxParser.TakesArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotLastParameter([NotNull] SyntaxParser.NotLastParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotLastParameter([NotNull] SyntaxParser.NotLastParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastParameter([NotNull] SyntaxParser.LastParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lastParameter</c>
	/// labeled alternative in <see cref="SyntaxParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastParameter([NotNull] SyntaxParser.LastParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>givesNothing</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGivesNothing([NotNull] SyntaxParser.GivesNothingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>givesNothing</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGivesNothing([NotNull] SyntaxParser.GivesNothingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>givesType</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGivesType([NotNull] SyntaxParser.GivesTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>givesType</c>
	/// labeled alternative in <see cref="SyntaxParser.givesArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGivesType([NotNull] SyntaxParser.GivesTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.nothing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNothing([NotNull] SyntaxParser.NothingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.nothing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNothing([NotNull] SyntaxParser.NothingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>createStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreateStatement([NotNull] SyntaxParser.CreateStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>createStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreateStatement([NotNull] SyntaxParser.CreateStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>giveStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGiveStatement([NotNull] SyntaxParser.GiveStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>giveStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGiveStatement([NotNull] SyntaxParser.GiveStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] SyntaxParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] SyntaxParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>useStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseStatement([NotNull] SyntaxParser.UseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>useStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseStatement([NotNull] SyntaxParser.UseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStatement([NotNull] SyntaxParser.PrintStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStatement([NotNull] SyntaxParser.PrintStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStatement([NotNull] SyntaxParser.ReadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStatement([NotNull] SyntaxParser.ReadStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addToListStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddToListStatement([NotNull] SyntaxParser.AddToListStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addToListStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddToListStatement([NotNull] SyntaxParser.AddToListStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStatement([NotNull] SyntaxParser.AssignStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="SyntaxParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStatement([NotNull] SyntaxParser.AssignStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] SyntaxParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] SyntaxParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>createNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreateNoInput([NotNull] SyntaxParser.CreateNoInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>createNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreateNoInput([NotNull] SyntaxParser.CreateNoInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>createWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreateWithInput([NotNull] SyntaxParser.CreateWithInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>createWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.create"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreateWithInput([NotNull] SyntaxParser.CreateWithInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>useGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseGive([NotNull] SyntaxParser.UseGiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>useGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseGive([NotNull] SyntaxParser.UseGiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nothingGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNothingGive([NotNull] SyntaxParser.NothingGiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nothingGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNothingGive([NotNull] SyntaxParser.NothingGiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expressionGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionGive([NotNull] SyntaxParser.ExpressionGiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionGive</c>
	/// labeled alternative in <see cref="SyntaxParser.give"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionGive([NotNull] SyntaxParser.ExpressionGiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.break"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreak([NotNull] SyntaxParser.BreakContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.break"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreak([NotNull] SyntaxParser.BreakContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>useNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseNoInput([NotNull] SyntaxParser.UseNoInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>useNoInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseNoInput([NotNull] SyntaxParser.UseNoInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>useWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseWithInput([NotNull] SyntaxParser.UseWithInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>useWithInput</c>
	/// labeled alternative in <see cref="SyntaxParser.use"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseWithInput([NotNull] SyntaxParser.UseWithInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notLastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotLastInput([NotNull] SyntaxParser.NotLastInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notLastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotLastInput([NotNull] SyntaxParser.NotLastInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastInput([NotNull] SyntaxParser.LastInputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lastInput</c>
	/// labeled alternative in <see cref="SyntaxParser.useInput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastInput([NotNull] SyntaxParser.LastInputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] SyntaxParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] SyntaxParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead([NotNull] SyntaxParser.ReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead([NotNull] SyntaxParser.ReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueExpression([NotNull] SyntaxParser.ValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueExpression([NotNull] SyntaxParser.ValueExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixExpression([NotNull] SyntaxParser.InfixExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixExpression([NotNull] SyntaxParser.InfixExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>convertExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConvertExpression([NotNull] SyntaxParser.ConvertExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>convertExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConvertExpression([NotNull] SyntaxParser.ConvertExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParensExpression([NotNull] SyntaxParser.ParensExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="SyntaxParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParensExpression([NotNull] SyntaxParser.ParensExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] SyntaxParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] SyntaxParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.character"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter([NotNull] SyntaxParser.CharacterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.character"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter([NotNull] SyntaxParser.CharacterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbol([NotNull] SyntaxParser.SymbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbol([NotNull] SyntaxParser.SymbolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.symbolWithoutNewline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbolWithoutNewline([NotNull] SyntaxParser.SymbolWithoutNewlineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.symbolWithoutNewline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbolWithoutNewline([NotNull] SyntaxParser.SymbolWithoutNewlineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.wsc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWsc([NotNull] SyntaxParser.WscContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.wsc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWsc([NotNull] SyntaxParser.WscContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] SyntaxParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] SyntaxParser.CommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.a"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterA([NotNull] SyntaxParser.AContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.a"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitA([NotNull] SyntaxParser.AContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.b"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterB([NotNull] SyntaxParser.BContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.b"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitB([NotNull] SyntaxParser.BContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.c"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC([NotNull] SyntaxParser.CContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.c"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC([NotNull] SyntaxParser.CContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.d"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterD([NotNull] SyntaxParser.DContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.d"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitD([NotNull] SyntaxParser.DContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.e"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterE([NotNull] SyntaxParser.EContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.e"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitE([NotNull] SyntaxParser.EContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.f"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterF([NotNull] SyntaxParser.FContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.f"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitF([NotNull] SyntaxParser.FContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.g"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterG([NotNull] SyntaxParser.GContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.g"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitG([NotNull] SyntaxParser.GContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.h"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterH([NotNull] SyntaxParser.HContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.h"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitH([NotNull] SyntaxParser.HContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.i"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterI([NotNull] SyntaxParser.IContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.i"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitI([NotNull] SyntaxParser.IContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.j"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJ([NotNull] SyntaxParser.JContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.j"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJ([NotNull] SyntaxParser.JContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.k"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterK([NotNull] SyntaxParser.KContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.k"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitK([NotNull] SyntaxParser.KContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.l"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterL([NotNull] SyntaxParser.LContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.l"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitL([NotNull] SyntaxParser.LContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.m"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterM([NotNull] SyntaxParser.MContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.m"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitM([NotNull] SyntaxParser.MContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.n"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterN([NotNull] SyntaxParser.NContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.n"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitN([NotNull] SyntaxParser.NContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.o"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterO([NotNull] SyntaxParser.OContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.o"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitO([NotNull] SyntaxParser.OContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.p"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterP([NotNull] SyntaxParser.PContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.p"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitP([NotNull] SyntaxParser.PContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.q"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQ([NotNull] SyntaxParser.QContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.q"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQ([NotNull] SyntaxParser.QContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.r"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterR([NotNull] SyntaxParser.RContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.r"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitR([NotNull] SyntaxParser.RContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.s"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterS([NotNull] SyntaxParser.SContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.s"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitS([NotNull] SyntaxParser.SContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.t"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterT([NotNull] SyntaxParser.TContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.t"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitT([NotNull] SyntaxParser.TContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.u"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterU([NotNull] SyntaxParser.UContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.u"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitU([NotNull] SyntaxParser.UContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.v"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterV([NotNull] SyntaxParser.VContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.v"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitV([NotNull] SyntaxParser.VContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.w"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterW([NotNull] SyntaxParser.WContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.w"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitW([NotNull] SyntaxParser.WContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterX([NotNull] SyntaxParser.XContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitX([NotNull] SyntaxParser.XContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterY([NotNull] SyntaxParser.YContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitY([NotNull] SyntaxParser.YContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SyntaxParser.z"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterZ([NotNull] SyntaxParser.ZContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SyntaxParser.z"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitZ([NotNull] SyntaxParser.ZContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
